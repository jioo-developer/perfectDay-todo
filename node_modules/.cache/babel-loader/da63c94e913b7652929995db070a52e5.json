{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhkim2\\\\Desktop\\\\PerfectDay-master\\\\src\\\\components\\\\calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Header from \"./header\";\nimport MainFooter from \"./mainFooter\";\nimport \"../reset.css\";\nimport \"../asset/calendar.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Calendar() {\n  _s();\n\n  const [prevDate, setPrevDate] = useState([]);\n  const [thisMons, setThisMons] = useState([]);\n  const [nextMon, setNextMon] = useState([]);\n  const [concatArray, setConcat] = useState([]);\n  const [monthCheck, setMonthCheck] = useState(false);\n  const date = new Date();\n  const utc = date.getTime() + date.getTimezoneOffset() * 60 * 1000;\n  const kstGap = 9 * 60 * 60 * 1000;\n  let arr = [];\n  let today = new Date(utc + kstGap); // 여기까지 한국시간\n\n  let time = {\n    currentYear: today.getFullYear(),\n    currentMonth: today.getMonth()\n  };\n\n  function TimeDate(time) {\n    const prevEndDay = new Date(time.currentYear, time.currentMonth, 0); //지정달에서 마지막에 0을 붙여지면 저번달 마지막날이 출력됨\n\n    const prevDay = prevEndDay.getDate();\n    const prevWeek = prevEndDay.getDay(); //주어진 날짜의 요일을 반환 0 : 일요일 , 1 : 월요일 등등\n    // 즉 31일 화요일을 출력\n\n    const thisMon = new Date(time.currentYear, time.currentMonth + 1, 0);\n    const thisMonDay = thisMon.getDate();\n    const thisMonWeek = thisMon.getDay(); //month는 -1 이랬으니 + 1 해줘야 이번달의 마지막날이 출력\n    // 이번달 마지막날\n\n    prevMonth(prevDay, prevWeek).then(result => {\n      setPrevDate(result);\n    });\n    nowMonth(thisMonDay).then(result => {\n      setThisMons(result);\n    });\n    nextMonth(thisMonWeek).then(result => {\n      setNextMon(result);\n    });\n  }\n\n  const prevMonth = (day, week) => {\n    return new Promise(function (res) {\n      arr = [];\n\n      for (var i = day - week + 1; i <= day; i++) {\n        arr.push(i);\n        res(arr);\n      }\n    });\n  };\n\n  const nowMonth = mon => {\n    return new Promise(function (res) {\n      arr = [];\n\n      for (var i = 1; i <= mon; i++) {\n        arr.push(i);\n        res(arr);\n      }\n    });\n  };\n\n  const nextMonth = next => {\n    return new Promise(function (res) {\n      arr = [];\n\n      for (var i = 1; i <= (7 - next == 7 ? 0 : 7 - next); i++) {\n        arr.push(i);\n        res(arr);\n      }\n    });\n  };\n\n  function changeMonth(e) {\n    if (e.target.classList.contains(\"prev_btn\")) {\n      time.currentMonth = today.getMonth - 1;\n      TimeDate(time);\n      setMonthCheck(true);\n    } else {\n      today = new Date(time.currentYear, time.currentMonth + 1, 1);\n      TimeDate(today);\n      setMonthCheck(true);\n    }\n  }\n\n  useEffect(() => {\n    TimeDate(time);\n  }, []);\n  useEffect(() => {\n    if (nextMon.length != 0) {\n      if (prevDate.length != 0 && thisMons.length != 0 && nextMon.length != 0) {\n        setConcat([...prevDate, ...thisMons, ...nextMon]);\n      }\n    }\n  }, [nextMon]);\n  useEffect(() => {\n    if (concatArray.length != 0) {\n      if (today.getMonth() == time.currentMonth) {\n        let todayDate = today.getDate();\n        let currentMonthDate = Array.from(document.querySelectorAll(\".dateDay\"));\n        currentMonthDate[todayDate + prevDate.length - 1].classList.add(\"today\");\n      }\n\n      setMonthCheck(false);\n    }\n  }, [concatArray]);\n  useEffect(() => {\n    if (monthCheck === true) {\n      document.querySelector(\".today\").classList.remove(\"today\");\n    }\n  }, [monthCheck]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap calendar\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"todays\",\n      children: \"TODAY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cal_data\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title_wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date_top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date_title\",\n            children: \"\\uC608\\uC57D\\uB41C \\uC77C\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date_title\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"prev_btn\",\n              onClick: e => changeMonth(e),\n              src: \"./img/locate_arrow.svg\",\n              alt: \"nav\",\n              style: {\n                width: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), time.currentMonth + 1, \"\\uC6D4\", /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"next_btn\",\n              onClick: e => changeMonth(e),\n              src: \"./img/locate_arrow.svg\",\n              alt: \"nav\",\n              style: {\n                width: 10,\n                transform: \"scaleX(-1)\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal_wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"days\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day\",\n              children: \"MON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day\",\n              children: \"TUE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day\",\n              children: \"WED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day\",\n              children: \"THU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day\",\n              children: \"FRI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day\",\n              children: \"SAT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day\",\n              children: \"SUN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date_wrap\",\n            children: concatArray.map((value, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day dateDay\",\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Calendar, \"ftmiZ8a0EFw2QWbgTa+OB1g3JdU=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["C:/Users/jhkim2/Desktop/PerfectDay-master/src/components/calendar.js"],"names":["React","useCallback","useEffect","useState","Header","MainFooter","Calendar","prevDate","setPrevDate","thisMons","setThisMons","nextMon","setNextMon","concatArray","setConcat","monthCheck","setMonthCheck","date","Date","utc","getTime","getTimezoneOffset","kstGap","arr","today","time","currentYear","getFullYear","currentMonth","getMonth","TimeDate","prevEndDay","prevDay","getDate","prevWeek","getDay","thisMon","thisMonDay","thisMonWeek","prevMonth","then","result","nowMonth","nextMonth","day","week","Promise","res","i","push","mon","next","changeMonth","e","target","classList","contains","length","todayDate","currentMonthDate","Array","from","document","querySelectorAll","add","querySelector","remove","width","transform","map","value","index"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport Header from \"./header\";\nimport MainFooter from \"./mainFooter\";\n\nimport \"../reset.css\";\nimport \"../asset/calendar.scss\";\n\nfunction Calendar() {\n  const [prevDate, setPrevDate] = useState([]);\n  const [thisMons, setThisMons] = useState([]);\n  const [nextMon, setNextMon] = useState([]);\n  const [concatArray, setConcat] = useState([]);\n  const [monthCheck, setMonthCheck] = useState(false);\n  const date = new Date();\n  const utc = date.getTime() + date.getTimezoneOffset() * 60 * 1000;\n  const kstGap = 9 * 60 * 60 * 1000;\n  let arr = [];\n  let today = new Date(utc + kstGap);\n  // 여기까지 한국시간\n\n  let time = {\n    currentYear: today.getFullYear(),\n    currentMonth: today.getMonth(),\n  };\n\n  function TimeDate(time) {\n    const prevEndDay = new Date(time.currentYear, time.currentMonth, 0);\n    //지정달에서 마지막에 0을 붙여지면 저번달 마지막날이 출력됨\n\n    const prevDay = prevEndDay.getDate();\n    const prevWeek = prevEndDay.getDay();\n    //주어진 날짜의 요일을 반환 0 : 일요일 , 1 : 월요일 등등\n    // 즉 31일 화요일을 출력\n\n    const thisMon = new Date(time.currentYear, time.currentMonth + 1, 0);\n    const thisMonDay = thisMon.getDate();\n    const thisMonWeek = thisMon.getDay();\n    //month는 -1 이랬으니 + 1 해줘야 이번달의 마지막날이 출력\n    // 이번달 마지막날\n\n    prevMonth(prevDay, prevWeek).then((result) => {\n      setPrevDate(result);\n    });\n    nowMonth(thisMonDay).then((result) => {\n      setThisMons(result);\n    });\n    nextMonth(thisMonWeek).then((result) => {\n      setNextMon(result);\n    });\n  }\n\n  const prevMonth = (day, week) => {\n    return new Promise(function (res) {\n      arr = [];\n      for (var i = day - week + 1; i <= day; i++) {\n        arr.push(i);\n        res(arr);\n      }\n    });\n  };\n\n  const nowMonth = (mon) => {\n    return new Promise(function (res) {\n      arr = [];\n      for (var i = 1; i <= mon; i++) {\n        arr.push(i);\n        res(arr);\n      }\n    });\n  };\n\n  const nextMonth = (next) => {\n    return new Promise(function (res) {\n      arr = [];\n      for (var i = 1; i <= (7 - next == 7 ? 0 : 7 - next); i++) {\n        arr.push(i);\n        res(arr);\n      }\n    });\n  };\n\n  function changeMonth(e) {\n    if (e.target.classList.contains(\"prev_btn\")) {\n      time.currentMonth = today.getMonth - 1;\n      TimeDate(time);\n      setMonthCheck(true);\n    } else {\n      today = new Date(time.currentYear, time.currentMonth + 1, 1);\n      TimeDate(today);\n      setMonthCheck(true);\n    }\n  }\n\n  useEffect(() => {\n    TimeDate(time);\n  }, []);\n\n  useEffect(() => {\n    if (nextMon.length != 0) {\n      if (prevDate.length != 0 && thisMons.length != 0 && nextMon.length != 0) {\n        setConcat([...prevDate, ...thisMons, ...nextMon]);\n      }\n    }\n  }, [nextMon]);\n\n  useEffect(() => {\n    if (concatArray.length != 0) {\n      if (today.getMonth() == time.currentMonth) {\n        let todayDate = today.getDate();\n        let currentMonthDate = Array.from(\n          document.querySelectorAll(\".dateDay\")\n        );\n        currentMonthDate[todayDate + prevDate.length - 1].classList.add(\n          \"today\"\n        );\n      }\n      setMonthCheck(false);\n    }\n  }, [concatArray]);\n\n  useEffect(() => {\n    if (monthCheck === true) {\n      document.querySelector(\".today\").classList.remove(\"today\");\n    }\n  }, [monthCheck]);\n\n  return (\n    <div className=\"wrap calendar\">\n      <Header />\n      <p className=\"todays\">TODAY</p>\n      <hr />\n      <section className=\"cal_data\">\n        <div className=\"title_wrap\">\n          <div className=\"date_top\">\n            <div className=\"date_title\">예약된 일정</div>\n            <div className=\"date_title\">\n              <img\n                className=\"prev_btn\"\n                onClick={(e) => changeMonth(e)}\n                src=\"./img/locate_arrow.svg\"\n                alt=\"nav\"\n                style={{ width: 10 }}\n              />\n              {time.currentMonth + 1}월\n              <img\n                className=\"next_btn\"\n                onClick={(e) => changeMonth(e)}\n                src=\"./img/locate_arrow.svg\"\n                alt=\"nav\"\n                style={{ width: 10, transform: \"scaleX(-1)\" }}\n              />\n            </div>\n          </div>\n          <div className=\"cal_wrap\">\n            <div className=\"days\">\n              <div className=\"day\">MON</div>\n              <div className=\"day\">TUE</div>\n              <div className=\"day\">WED</div>\n              <div className=\"day\">THU</div>\n              <div className=\"day\">FRI</div>\n              <div className=\"day\">SAT</div>\n              <div className=\"day\">SUN</div>\n            </div>\n            <div className=\"date_wrap\">\n              {concatArray.map((value, index) => {\n                return <div className=\"day dateDay\">{value}</div>;\n              })}\n            </div>\n          </div>\n        </div>\n      </section>\n      <MainFooter />\n    </div>\n  );\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}