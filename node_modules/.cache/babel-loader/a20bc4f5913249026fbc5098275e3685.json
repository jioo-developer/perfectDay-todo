{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhkim2\\\\Desktop\\\\PerfectDay-master\\\\src\\\\components\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { successDate } from \"../index\";\nimport MainFooter from \"../components/main_footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction List() {\n  _s();\n\n  const todolist = useSelector(state => state.Todo);\n  const [checked, setChecked] = useState(false);\n  const saveList = \"saveList\";\n  const dispatch = useDispatch();\n  const nowTime = new Date(),\n        year = nowTime.getFullYear(),\n        month = nowTime.getMonth() + 1,\n        date = nowTime.getDate(),\n        hour = nowTime.getHours(),\n        min = nowTime.getMinutes();\n  const DateFac = {\n    year: year,\n    month: month,\n    date: date,\n    hour: hour,\n    min: min\n  };\n\n  function saveHandler() {\n    window.alert(\"현재까지의 리스트를 저장합니다\");\n    localStorage.setItem(saveList, JSON.stringify(todolist));\n  }\n\n  function successHandler(e) {\n    dispatch(successDate(DateFac));\n    Array.from(e.currentTarget.parentElement.getElementsByTagName(\"p\")).forEach(item => {\n      item.classList.add(\"op_off\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section02\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"in_s2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC77C\\uC815\\uC2A4\\uCF00\\uC904\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: saveHandler,\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), todolist.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"today_date\",\n                children: [value.writeH, \":\", value.writeM]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"today_txt\",\n                children: value.write\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => successHandler(e),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/img/before_check.svg\",\n                  alt: \"check\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(List, \"LGo+bQ86wwJOX50GadCSU/0ox9c=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/jhkim2/Desktop/PerfectDay-master/src/components/List.js"],"names":["React","useState","useDispatch","useSelector","successDate","MainFooter","List","todolist","state","Todo","checked","setChecked","saveList","dispatch","nowTime","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","DateFac","saveHandler","window","alert","localStorage","setItem","JSON","stringify","successHandler","e","Array","from","currentTarget","parentElement","getElementsByTagName","forEach","item","classList","add","map","value","index","writeH","writeM","write"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { successDate } from \"../index\";\r\nimport MainFooter from \"../components/main_footer\";\r\nfunction List() {\r\n  const todolist = useSelector((state) => state.Todo);\r\n  const [checked, setChecked] = useState(false);\r\n  const saveList = \"saveList\";\r\n  const dispatch = useDispatch();\r\n\r\n  const nowTime = new Date(),\r\n    year = nowTime.getFullYear(),\r\n    month = nowTime.getMonth() + 1,\r\n    date = nowTime.getDate(),\r\n    hour = nowTime.getHours(),\r\n    min = nowTime.getMinutes();\r\n\r\n  const DateFac = {\r\n    year: year,\r\n    month: month,\r\n    date: date,\r\n    hour: hour,\r\n    min: min,\r\n  };\r\n\r\n  function saveHandler() {\r\n    window.alert(\"현재까지의 리스트를 저장합니다\");\r\n    localStorage.setItem(saveList, JSON.stringify(todolist));\r\n  }\r\n\r\n  function successHandler(e) {\r\n    dispatch(successDate(DateFac));\r\n    Array.from(e.currentTarget.parentElement.getElementsByTagName(\"p\")).forEach(\r\n      (item) => {\r\n        item.classList.add(\"op_off\");\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"section02\">\r\n        <div className=\"in_s2\">\r\n          <div className=\"schedule\">\r\n            <p>일정스케줄</p>\r\n            <span onClick={saveHandler}>저장</span>\r\n          </div>\r\n          {todolist.map((value, index) => {\r\n            return (\r\n              <>\r\n                <div className=\"list\" key={index}>\r\n                  <p className=\"today_date\">\r\n                    {value.writeH}:{value.writeM}\r\n                  </p>\r\n                  <p className=\"today_txt\">{value.write}</p>\r\n                  <button onClick={(e) => successHandler(e)}>\r\n                    <img src=\"/img/before_check.svg\" alt=\"check\"></img>\r\n                  </button>\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      </section>\r\n      <MainFooter></MainFooter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}