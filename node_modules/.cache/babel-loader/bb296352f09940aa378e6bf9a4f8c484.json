{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhkim2\\\\Desktop\\\\PerfectDay-master\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  editorToggle: false,\n  Todo: [],\n  successDate: [],\n  parcent: 0,\n  loadding: false,\n  console: \"\",\n  issue: false,\n  isuueToggle: false\n};\nconst ToggleEditor = \"ToggleEditor\";\nconst Todo = \"Todo\";\nconst success = \"success\";\nconst parcent = \"parcent\";\nconst clear = \"clear\";\nconst loadList = \"loadList\";\nconst issue = \"issue\";\nconst issueToggle = \"issueToggle\";\nexport const EditorAction = () => ({\n  type: ToggleEditor\n});\n_c = EditorAction;\nexport const TodoPost = data => ({\n  type: Todo,\n  data\n});\n_c2 = TodoPost;\nexport const successDate = date => ({\n  type: success,\n  date\n});\nexport const ParcentAction = data => ({\n  type: parcent,\n  data\n});\n_c3 = ParcentAction;\nexport const clearSaveList = () => ({\n  type: clear\n});\nexport const LoadSaveList = data => ({\n  type: loadList,\n  data\n});\n_c4 = LoadSaveList;\nexport const issueAction = () => ({\n  type: issue\n});\nconst store = createStore(reducer, applyMiddleware(logger));\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ToggleEditor:\n      return { ...state,\n        editorToggle: !state.editorToggle\n      };\n\n    case Todo:\n      return { ...state,\n        Todo: [...state.Todo, action.data],\n        editorToggle: !state.editorToggle\n      };\n\n    case success:\n      return { ...state,\n        successDate: [...state.successDate, action.date]\n      };\n\n    case parcent:\n      return { ...state,\n        parcent: state.parcent + 25\n      };\n\n    case clear:\n      return { ...state,\n        Todo: [...state.Todo]\n      };\n\n    case loadList:\n      return { ...state,\n        loadding: state.loadding = true,\n        Todo: [...state.Todo, ...action.data]\n      };\n\n    case issue:\n      return { ...state,\n        issue: !state.issue\n      };\n\n    default:\n      return state;\n  }\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 110,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"EditorAction\");\n$RefreshReg$(_c2, \"TodoPost\");\n$RefreshReg$(_c3, \"ParcentAction\");\n$RefreshReg$(_c4, \"LoadSaveList\");","map":{"version":3,"sources":["C:/Users/jhkim2/Desktop/PerfectDay-master/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","BrowserRouter","Provider","createStore","applyMiddleware","logger","initialState","editorToggle","Todo","successDate","parcent","loadding","console","issue","isuueToggle","ToggleEditor","success","clear","loadList","issueToggle","EditorAction","type","TodoPost","data","date","ParcentAction","clearSaveList","LoadSaveList","issueAction","store","reducer","state","action","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\n\nconst initialState = {\n  editorToggle: false,\n  Todo: [],\n  successDate: [],\n  parcent: 0,\n  loadding: false,\n  console: \"\",\n  issue: false,\n  isuueToggle: false,\n};\n\nconst ToggleEditor = \"ToggleEditor\";\nconst Todo = \"Todo\";\nconst success = \"success\";\nconst parcent = \"parcent\";\nconst clear = \"clear\";\nconst loadList = \"loadList\";\nconst issue = \"issue\";\nconst issueToggle = \"issueToggle\";\n\nexport const EditorAction = () => ({\n  type: ToggleEditor,\n});\n\nexport const TodoPost = (data) => ({\n  type: Todo,\n  data,\n});\n\nexport const successDate = (date) => ({\n  type: success,\n  date,\n});\n\nexport const ParcentAction = (data) => ({\n  type: parcent,\n  data,\n});\n\nexport const clearSaveList = () => ({\n  type: clear,\n});\n\nexport const LoadSaveList = (data) => ({\n  type: loadList,\n  data,\n});\n\nexport const issueAction = () => ({\n  type: issue,\n});\n\nconst store = createStore(reducer, applyMiddleware(logger));\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ToggleEditor:\n      return {\n        ...state,\n        editorToggle: !state.editorToggle,\n      };\n    case Todo:\n      return {\n        ...state,\n        Todo: [...state.Todo, action.data],\n        editorToggle: !state.editorToggle,\n      };\n    case success:\n      return {\n        ...state,\n        successDate: [...state.successDate, action.date],\n      };\n    case parcent:\n      return {\n        ...state,\n        parcent: state.parcent + 25,\n      };\n    case clear:\n      return {\n        ...state,\n        Todo: [...state.Todo],\n      };\n    case loadList:\n      return {\n        ...state,\n        loadding: (state.loadding = true),\n        Todo: [...state.Todo, ...action.data],\n      };\n    case issue:\n      return {\n        ...state,\n        issue: !state.issue,\n      };\n    default:\n      return state;\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}