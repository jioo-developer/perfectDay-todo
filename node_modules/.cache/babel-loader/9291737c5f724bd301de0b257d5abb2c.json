{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhkim2\\\\Desktop\\\\PerfectDay-master\\\\src\\\\components\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { batch, useSelector } from \"react-redux\";\nimport { contentAction, Counter, reportAction, successDate, TodoPost } from \"../module/reducer\";\nimport MainFooter from \"../components/mainFooter\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClearList = styled.p`\n  color: #ddd;\n  font-family: \"AppleSDGothicNeoSB\";\n  text-decoration: line-through;\n  font-size: 16px;\n`;\n_c = ClearList;\nconst ClearIndent = styled(ClearList)`\n  text-indent: -20px;\n`;\n_c2 = ClearIndent;\nconst ClearBtn = styled.button`\n  pointer-events: none;\n  opacity: 0;\n`;\n_c3 = ClearBtn;\n\nfunction List(props) {\n  _s();\n\n  const todolist = useSelector(state => state.Todo);\n\n  function createPost() {\n    const nowTime = new Date(),\n          year = nowTime.getFullYear(),\n          month = nowTime.getMonth() + 1,\n          date = nowTime.getDate(),\n          hour = nowTime.getHours(),\n          min = nowTime.getMinutes();\n    const DateFac = {\n      year: year,\n      month: month,\n      date: date,\n      hour: hour,\n      min: min\n    };\n    return DateFac;\n  }\n\n  function saveHandler() {\n    window.alert(\"현재까지의 리스트를 저장합니다\");\n    localStorage.setItem(props.saveList, JSON.stringify(todolist));\n    localStorage.setItem(props.saveCounter, props.parcent);\n    localStorage.setItem(props.loadAmount, props.listAmount);\n  }\n\n  function successHandler(e) {\n    const successTitle = e.currentTarget.parentElement.getElementsByClassName(\"today_txt\")[0].innerHTML;\n    batch(() => {\n      props.dispatch(successDate(createPost()));\n      props.dispatch(reportAction());\n      props.dispatch(contentAction(successTitle));\n    });\n    const endList = new Promise(function (res, rej) {\n      setTimeout(() => {\n        res(Array.from(document.querySelectorAll(\".clearList\")).length);\n      }, 500);\n    });\n    endList.then(result => {\n      props.dispatch(Counter(result));\n    });\n  }\n\n  function deleteHandler() {\n    localStorage.removeItem(props.saveList);\n    localStorage.removeItem(props.saveCounter);\n    localStorage.removeItem(props.loadAmount);\n    window.location.reload();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section02\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"in_s2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC77C\\uC815\\uC2A4\\uCF00\\uC904\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: saveHandler,\n              children: \"\\uC800\\uC7A5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: deleteHandler,\n              children: \"\\uCD08\\uAE30\\uD654\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), todolist.map((listData, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `list ${todolist[index].clear === true ? \"clearList\" : \"\"}`,\n            children: [todolist[index].clear === false ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"today_date\",\n              children: [listData.writeH, \":\", listData.writeM]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ClearList, {\n              children: [listData.writeH, \":\", listData.writeM]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), todolist[index].clear === false ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"today_txt\",\n              children: listData.write\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ClearIndent, {\n              children: listData.write\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), todolist[index].clear === false ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                successHandler(e);\n                let copyArray = todolist;\n                copyArray[index].clear = true;\n                props.dispatch(TodoPost(...copyArray));\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/img/before_check.svg\",\n                alt: \"check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ClearBtn, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainFooter, {\n      todolist: todolist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(List, \"me0oUmfmZIT8HuQfdIBAHRcQCBA=\", false, function () {\n  return [useSelector];\n});\n\n_c4 = List;\nexport default List;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ClearList\");\n$RefreshReg$(_c2, \"ClearIndent\");\n$RefreshReg$(_c3, \"ClearBtn\");\n$RefreshReg$(_c4, \"List\");","map":{"version":3,"sources":["C:/Users/jhkim2/Desktop/PerfectDay-master/src/components/List.js"],"names":["React","batch","useSelector","contentAction","Counter","reportAction","successDate","TodoPost","MainFooter","styled","ClearList","p","ClearIndent","ClearBtn","button","List","props","todolist","state","Todo","createPost","nowTime","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","DateFac","saveHandler","window","alert","localStorage","setItem","saveList","JSON","stringify","saveCounter","parcent","loadAmount","listAmount","successHandler","e","successTitle","currentTarget","parentElement","getElementsByClassName","innerHTML","dispatch","endList","Promise","res","rej","setTimeout","Array","from","document","querySelectorAll","length","then","result","deleteHandler","removeItem","location","reload","map","listData","index","clear","writeH","writeM","write","copyArray"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { batch, useSelector } from \"react-redux\";\r\nimport {\r\n  contentAction,\r\n  Counter,\r\n  reportAction,\r\n  successDate,\r\n  TodoPost,\r\n} from \"../module/reducer\";\r\nimport MainFooter from \"../components/mainFooter\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ClearList = styled.p`\r\n  color: #ddd;\r\n  font-family: \"AppleSDGothicNeoSB\";\r\n  text-decoration: line-through;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst ClearIndent = styled(ClearList)`\r\n  text-indent: -20px;\r\n`;\r\n\r\nconst ClearBtn = styled.button`\r\n  pointer-events: none;\r\n  opacity: 0;\r\n`;\r\n\r\nfunction List(props) {\r\n  const todolist = useSelector((state) => state.Todo);\r\n\r\n  function createPost() {\r\n    const nowTime = new Date(),\r\n      year = nowTime.getFullYear(),\r\n      month = nowTime.getMonth() + 1,\r\n      date = nowTime.getDate(),\r\n      hour = nowTime.getHours(),\r\n      min = nowTime.getMinutes();\r\n\r\n    const DateFac = {\r\n      year: year,\r\n      month: month,\r\n      date: date,\r\n      hour: hour,\r\n      min: min,\r\n    };\r\n    return DateFac;\r\n  }\r\n\r\n  function saveHandler() {\r\n    window.alert(\"현재까지의 리스트를 저장합니다\");\r\n    localStorage.setItem(props.saveList, JSON.stringify(todolist));\r\n    localStorage.setItem(props.saveCounter, props.parcent);\r\n    localStorage.setItem(props.loadAmount, props.listAmount);\r\n  }\r\n\r\n  function successHandler(e) {\r\n    const successTitle =\r\n      e.currentTarget.parentElement.getElementsByClassName(\"today_txt\")[0]\r\n        .innerHTML;\r\n\r\n    batch(() => {\r\n      props.dispatch(successDate(createPost()));\r\n      props.dispatch(reportAction());\r\n      props.dispatch(contentAction(successTitle));\r\n    });\r\n\r\n    const endList = new Promise(function (res, rej) {\r\n      setTimeout(() => {\r\n        res(Array.from(document.querySelectorAll(\".clearList\")).length);\r\n      }, 500);\r\n    });\r\n\r\n    endList.then((result) => {\r\n      props.dispatch(Counter(result));\r\n    });\r\n  }\r\n\r\n  function deleteHandler() {\r\n    localStorage.removeItem(props.saveList);\r\n    localStorage.removeItem(props.saveCounter);\r\n    localStorage.removeItem(props.loadAmount);\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"section02\">\r\n        <div className=\"in_s2\">\r\n          <div className=\"schedule\">\r\n            <p>일정스케줄</p>\r\n            <div>\r\n              <span onClick={saveHandler}>저장</span>\r\n              <span onClick={deleteHandler}>초기화</span>\r\n            </div>\r\n          </div>\r\n          {todolist.map((listData, index) => {\r\n            return (\r\n              <div\r\n                className={`list ${\r\n                  todolist[index].clear === true ? \"clearList\" : \"\"\r\n                }`}\r\n                key={index}\r\n              >\r\n                {todolist[index].clear === false ? (\r\n                  <p className=\"today_date\">\r\n                    {listData.writeH}:{listData.writeM}\r\n                  </p>\r\n                ) : (\r\n                  <ClearList>\r\n                    {listData.writeH}:{listData.writeM}\r\n                  </ClearList>\r\n                )}\r\n\r\n                {todolist[index].clear === false ? (\r\n                  <p className=\"today_txt\">{listData.write}</p>\r\n                ) : (\r\n                  <ClearIndent>{listData.write}</ClearIndent>\r\n                )}\r\n                {todolist[index].clear === false ? (\r\n                  <button\r\n                    onClick={(e) => {\r\n                      successHandler(e);\r\n                      let copyArray = todolist;\r\n                      copyArray[index].clear = true;\r\n                      props.dispatch(TodoPost(...copyArray));\r\n                    }}\r\n                  >\r\n                    <img src=\"/img/before_check.svg\" alt=\"check\" />\r\n                  </button>\r\n                ) : (\r\n                  <ClearBtn />\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </section>\r\n      <MainFooter todolist={todolist}></MainFooter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}