{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhkim2\\\\Desktop\\\\PerfectDay-master\\\\src\\\\components\\\\editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"../asset/editor.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Editor(props) {\n  _s();\n\n  let [write, setwrite] = useState([]);\n  let [writeH, setwriteH] = useState([]);\n  let [writeM, setwriteM] = useState([]);\n  const toggleState = useSelector(state => state.editorToggle);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor\",\n    children: toggleState === true ? null : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Editor, \"ZnDphv6H5j8XFa8+W9QC3pIrXPY=\", false, function () {\n  return [useSelector];\n});\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["C:/Users/jhkim2/Desktop/PerfectDay-master/src/components/editor.js"],"names":["React","useState","useSelector","Editor","props","write","setwrite","writeH","setwriteH","writeM","setwriteM","toggleState","state","editorToggle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,sBAAP;;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAI,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMU,WAAW,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAA/B;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cAAyBF,WAAW,KAAK,IAAhB,GAAuB,IAAvB,GAA8B;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAPQR,M;UAIaD,W;;;KAJbC,M;AAST,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"../asset/editor.scss\";\nfunction Editor(props) {\n  let [write, setwrite] = useState([]);\n  let [writeH, setwriteH] = useState([]);\n  let [writeM, setwriteM] = useState([]);\n  const toggleState = useSelector((state) => state.editorToggle);\n\n  return <div className=\"editor\">{toggleState === true ? null : null}</div>;\n}\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}