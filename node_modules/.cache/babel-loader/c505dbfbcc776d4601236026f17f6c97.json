{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhkim2\\\\Desktop\\\\PerfectDay-master\\\\src\\\\components\\\\editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"../asset/editor.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Editor(props) {\n  _s();\n\n  let [write, setwrite] = useState([]);\n  let [writeH, setwriteH] = useState([]);\n  let [writeM, setwriteM] = useState([]);\n  const toggleState = useSelector(state => state.editorToggle);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: toggleState && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\uC624\\uB298\\uC758 \\uBAA9\\uD45C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text_area\",\n          placeholder: \"\\uC2A4\\uCF00\\uC904\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n          onChange: e => {\n            setwrite(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"day\",\n            children: \"\\uC2DC\\uAC04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"time_wrap\",\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"time_txt hour\",\n              placeholder: \"00\",\n              maxLength: \"2\",\n              type: \"number\",\n              min: \"00\",\n              max: \"24\",\n              onChange: e => {\n                setwriteH(e.target.value);\n                setwriteM(\"00\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"time_txt minute\",\n              placeholder: \"00\",\n              type: \"number\",\n              maxLength: \"2\",\n              min: \"00\",\n              max: \"60\",\n              onChange: e => {\n                setwriteM(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"time_txt\",\n              placeholder: \"00\",\n              type: \"number\",\n              maxLength: \"2\",\n              min: \"00\",\n              max: \"60\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            let arrayWrite = [...write];\n            arrayWrite.unshift(write);\n            setwrite(arrayWrite);\n            let arrayH = [...writeH];\n            arrayH.unshift(writeH);\n            setwriteH(arrayH);\n            let arrayM = [...writeM];\n            arrayM.unshift(writeM);\n            setwriteM(arrayM); // console.log(write)\n            // console.log(writeH)\n            // console.log(writeM)\n\n            let danger = document.querySelector(\".text_area\").value;\n            let logicFac = {\n              write: write,\n              writeH: writeH,\n              writeM: writeM\n            };\n            danger === \"\" ? alert(\"스케줄을 입력해주세요\") : props.dispatch({\n              type: \"에디터닫기\",\n              payload: logicFac\n            });\n          },\n          children: \"\\uB4F1\\uB85D\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Editor, \"ZnDphv6H5j8XFa8+W9QC3pIrXPY=\", false, function () {\n  return [useSelector];\n});\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["C:/Users/jhkim2/Desktop/PerfectDay-master/src/components/editor.js"],"names":["React","useState","useSelector","Editor","props","write","setwrite","writeH","setwriteH","writeM","setwriteM","toggleState","state","editorToggle","e","target","value","arrayWrite","unshift","arrayH","arrayM","danger","document","querySelector","logicFac","alert","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"../asset/editor.scss\";\nfunction Editor(props) {\n  let [write, setwrite] = useState([]);\n  let [writeH, setwriteH] = useState([]);\n  let [writeM, setwriteM] = useState([]);\n  const toggleState = useSelector((state) => state.editorToggle);\n\n  return (\n    <div>\n      {toggleState && (\n        <div className=\"editor\">\n          <>\n            <b>오늘의 목표</b>\n            <input\n              className=\"text_area\"\n              placeholder=\"스케줄을 입력해주세요\"\n              onChange={(e) => {\n                setwrite(e.target.value);\n              }}\n            ></input>\n            <div className=\"date\">\n              <p className=\"day\">시간</p>\n              <form className=\"time_wrap\" autoComplete=\"off\">\n                <input\n                  className=\"time_txt hour\"\n                  placeholder=\"00\"\n                  maxLength=\"2\"\n                  type=\"number\"\n                  min=\"00\"\n                  max=\"24\"\n                  onChange={(e) => {\n                    setwriteH(e.target.value);\n                    setwriteM(\"00\");\n                  }}\n                ></input>\n                <input\n                  className=\"time_txt minute\"\n                  placeholder=\"00\"\n                  type=\"number\"\n                  maxLength=\"2\"\n                  min=\"00\"\n                  max=\"60\"\n                  onChange={(e) => {\n                    setwriteM(e.target.value);\n                  }}\n                ></input>\n                <input\n                  className=\"time_txt\"\n                  placeholder=\"00\"\n                  type=\"number\"\n                  maxLength=\"2\"\n                  min=\"00\"\n                  max=\"60\"\n                  disabled\n                ></input>\n              </form>\n            </div>\n            <button\n              onClick={() => {\n                let arrayWrite = [...write];\n                arrayWrite.unshift(write);\n                setwrite(arrayWrite);\n\n                let arrayH = [...writeH];\n                arrayH.unshift(writeH);\n                setwriteH(arrayH);\n\n                let arrayM = [...writeM];\n                arrayM.unshift(writeM);\n                setwriteM(arrayM);\n                // console.log(write)\n                // console.log(writeH)\n                // console.log(writeM)\n\n                let danger = document.querySelector(\".text_area\").value;\n\n                let logicFac = {\n                  write: write,\n                  writeH: writeH,\n                  writeM: writeM,\n                };\n                danger === \"\"\n                  ? alert(\"스케줄을 입력해주세요\")\n                  : props.dispatch({ type: \"에디터닫기\", payload: logicFac });\n              }}\n            >\n              등록하기\n            </button>\n          </>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}