{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhkim2\\\\Desktop\\\\PerfectDay-master\\\\src\\\\components\\\\calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Header from \"./header\";\nimport MainFooter from \"./mainFooter\";\nimport { ArrowBackIos, ArrowForwardIos } from \"@material-ui/icons\";\nimport \"../reset.css\";\nimport \"../asset/calendar.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { monMinutesAction, monPlusAction } from \"..\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Calendar() {\n  _s();\n\n  const [prevDate, setPrevDate] = useState([]);\n  const [thisMons, setThisMons] = useState([]);\n  const [nextMon, setNextMon] = useState([]);\n  const [concatArray, setConcat] = useState([]);\n  const date = new Date();\n  const utc = date.getTime() + date.getTimezoneOffset() * 60 * 1000;\n  const kstGap = 9 * 60 * 60 * 1000;\n  let arr = [];\n  let today = new Date(utc + kstGap);\n  let monData = useSelector(state => state.monData);\n  const dispatch = useDispatch(); // 여기까지 한국시간\n\n  let thisMonth = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n\n  function TimeDate(thisMonth) {\n    console.log(thisMonth);\n    let time = {\n      currentYear: thisMonth.getFullYear(),\n      currentMonth: thisMonth.getMonth()\n    };\n    const prevEndDay = new Date(time.currentYear, time.currentMonth, 0); //지정달에서 마지막에 0을 붙여지면 저번달 마지막날이 출력됨\n\n    const prevDay = prevEndDay.getDate();\n    const prevWeek = prevEndDay.getDay(); //주어진 날짜의 요일을 반환 0 : 일요일 , 1 : 월요일 등등\n    // 즉 31일 화요일을 출력\n\n    const thisMon = new Date(time.currentYear, time.currentMonth + 1, 0);\n    const thisMonDay = thisMon.getDate();\n    const thisMonWeek = thisMon.getDay(); //month는 -1 이랬으니 + 1 해줘야 이번달의 마지막날이 출력\n    // 이번달 마지막날\n\n    prevMonth(prevDay, prevWeek).then(result => {\n      setPrevDate(result);\n    });\n    nowMonth(thisMonDay).then(result => {\n      setThisMons(result);\n    });\n    nextMonth(thisMonWeek).then(result => {\n      setNextMon(result);\n    });\n  }\n\n  const prevMonth = (day, week) => {\n    return new Promise(function (res) {\n      arr = [];\n\n      for (var i = day - week + 1; i <= day; i++) {\n        arr.push(i);\n        res(arr);\n      }\n    });\n  };\n\n  const nowMonth = mon => {\n    return new Promise(function (res) {\n      arr = [];\n\n      for (var i = 1; i <= mon; i++) {\n        arr.push(i);\n        res(arr);\n      }\n    });\n  };\n\n  const nextMonth = next => {\n    return new Promise(function (res) {\n      arr = [];\n\n      for (var i = 1; i <= (7 - next == 7 ? 0 : 7 - next); i++) {\n        arr.push(i);\n        res(arr);\n      }\n    });\n  };\n\n  function changeMonth(e) {\n    if (e.target.classList.contains(\"prev_btn\")) {\n      dispatch(monMinutesAction());\n      thisMonth = new Date(thisMonth.getFullYear(), thisMonth.getMonth() + monData, 1);\n      TimeDate(thisMonth);\n    } else {\n      dispatch(monPlusAction());\n      thisMonth = new Date(thisMonth.getFullYear(), thisMonth.getMonth() + monData, 1);\n      TimeDate(thisMonth);\n    }\n  }\n\n  useEffect(() => {\n    if (nextMon.length != 0) {\n      setConcat([...prevDate, ...thisMons, ...nextMon]);\n    }\n  }, [nextMon]);\n  useEffect(() => {\n    TimeDate(thisMonth);\n  }, []); //오늘 날짜 표시해주는 함수\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap calendar\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cal_data\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title_wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date_top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date_title\",\n            children: \"\\uC608\\uC57D\\uB41C \\uC77C\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date_title\",\n            children: [/*#__PURE__*/_jsxDEV(ArrowBackIos, {\n              color: \"action\",\n              className: \"prev_btn\",\n              onClick: e => changeMonth(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), thisMonth.getMonth() + 1, \"\\uC6D4\", /*#__PURE__*/_jsxDEV(ArrowForwardIos, {\n              color: \"action\",\n              className: \"next_btn\",\n              onClick: e => changeMonth(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal_wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"days\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day\",\n              children: \"MON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day\",\n              children: \"TUE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day\",\n              children: \"WED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day\",\n              children: \"THU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day\",\n              children: \"FRI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day\",\n              children: \"SAT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day\",\n              children: \"SUN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date_wrap\",\n            children: concatArray.map((value, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day dateDay\",\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Calendar, \"l9HuNrScx27hVDn3dYaoOyRHj5g=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["C:/Users/jhkim2/Desktop/PerfectDay-master/src/components/calendar.js"],"names":["React","useCallback","useEffect","useState","Header","MainFooter","ArrowBackIos","ArrowForwardIos","useDispatch","useSelector","monMinutesAction","monPlusAction","Calendar","prevDate","setPrevDate","thisMons","setThisMons","nextMon","setNextMon","concatArray","setConcat","date","Date","utc","getTime","getTimezoneOffset","kstGap","arr","today","monData","state","dispatch","thisMonth","getFullYear","getMonth","getDate","TimeDate","console","log","time","currentYear","currentMonth","prevEndDay","prevDay","prevWeek","getDay","thisMon","thisMonDay","thisMonWeek","prevMonth","then","result","nowMonth","nextMonth","day","week","Promise","res","i","push","mon","next","changeMonth","e","target","classList","contains","length","map","value","index"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport Header from \"./header\";\nimport MainFooter from \"./mainFooter\";\nimport { ArrowBackIos, ArrowForwardIos } from \"@material-ui/icons\";\nimport \"../reset.css\";\nimport \"../asset/calendar.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { monMinutesAction, monPlusAction } from \"..\";\n\nfunction Calendar() {\n  const [prevDate, setPrevDate] = useState([]);\n  const [thisMons, setThisMons] = useState([]);\n  const [nextMon, setNextMon] = useState([]);\n  const [concatArray, setConcat] = useState([]);\n  const date = new Date();\n  const utc = date.getTime() + date.getTimezoneOffset() * 60 * 1000;\n  const kstGap = 9 * 60 * 60 * 1000;\n  let arr = [];\n  let today = new Date(utc + kstGap);\n  let monData = useSelector((state) => state.monData);\n  const dispatch = useDispatch();\n  // 여기까지 한국시간\n\n  let thisMonth = new Date(\n    today.getFullYear(),\n    today.getMonth(),\n    today.getDate()\n  );\n\n  function TimeDate(thisMonth) {\n    console.log(thisMonth);\n    let time = {\n      currentYear: thisMonth.getFullYear(),\n      currentMonth: thisMonth.getMonth(),\n    };\n    const prevEndDay = new Date(time.currentYear, time.currentMonth, 0);\n    //지정달에서 마지막에 0을 붙여지면 저번달 마지막날이 출력됨\n\n    const prevDay = prevEndDay.getDate();\n    const prevWeek = prevEndDay.getDay();\n    //주어진 날짜의 요일을 반환 0 : 일요일 , 1 : 월요일 등등\n    // 즉 31일 화요일을 출력\n\n    const thisMon = new Date(time.currentYear, time.currentMonth + 1, 0);\n    const thisMonDay = thisMon.getDate();\n    const thisMonWeek = thisMon.getDay();\n    //month는 -1 이랬으니 + 1 해줘야 이번달의 마지막날이 출력\n    // 이번달 마지막날\n\n    prevMonth(prevDay, prevWeek).then((result) => {\n      setPrevDate(result);\n    });\n    nowMonth(thisMonDay).then((result) => {\n      setThisMons(result);\n    });\n    nextMonth(thisMonWeek).then((result) => {\n      setNextMon(result);\n    });\n  }\n\n  const prevMonth = (day, week) => {\n    return new Promise(function (res) {\n      arr = [];\n      for (var i = day - week + 1; i <= day; i++) {\n        arr.push(i);\n        res(arr);\n      }\n    });\n  };\n\n  const nowMonth = (mon) => {\n    return new Promise(function (res) {\n      arr = [];\n      for (var i = 1; i <= mon; i++) {\n        arr.push(i);\n        res(arr);\n      }\n    });\n  };\n\n  const nextMonth = (next) => {\n    return new Promise(function (res) {\n      arr = [];\n      for (var i = 1; i <= (7 - next == 7 ? 0 : 7 - next); i++) {\n        arr.push(i);\n        res(arr);\n      }\n    });\n  };\n\n  function changeMonth(e) {\n    if (e.target.classList.contains(\"prev_btn\")) {\n      dispatch(monMinutesAction());\n      thisMonth = new Date(\n        thisMonth.getFullYear(),\n        thisMonth.getMonth() + monData,\n        1\n      );\n      TimeDate(thisMonth);\n    } else {\n      dispatch(monPlusAction());\n      thisMonth = new Date(\n        thisMonth.getFullYear(),\n        thisMonth.getMonth() + monData,\n        1\n      );\n      TimeDate(thisMonth);\n    }\n  }\n\n  useEffect(() => {\n    if (nextMon.length != 0) {\n      setConcat([...prevDate, ...thisMons, ...nextMon]);\n    }\n  }, [nextMon]);\n\n  useEffect(() => {\n    TimeDate(thisMonth);\n  }, []);\n\n  //오늘 날짜 표시해주는 함수\n\n  return (\n    <div className=\"wrap calendar\">\n      <Header />\n      <section className=\"cal_data\">\n        <div className=\"title_wrap\">\n          <div className=\"date_top\">\n            <div className=\"date_title\">예약된 일정</div>\n            <div className=\"date_title\">\n              <ArrowBackIos\n                color=\"action\"\n                className=\"prev_btn\"\n                onClick={(e) => changeMonth(e)}\n              />\n              {thisMonth.getMonth() + 1}월\n              <ArrowForwardIos\n                color=\"action\"\n                className=\"next_btn\"\n                onClick={(e) => changeMonth(e)}\n              />\n            </div>\n          </div>\n          <div className=\"cal_wrap\">\n            <div className=\"days\">\n              <div className=\"day\">MON</div>\n              <div className=\"day\">TUE</div>\n              <div className=\"day\">WED</div>\n              <div className=\"day\">THU</div>\n              <div className=\"day\">FRI</div>\n              <div className=\"day\">SAT</div>\n              <div className=\"day\">SUN</div>\n            </div>\n            <div className=\"date_wrap\">\n              {concatArray.map((value, index) => {\n                return <div className=\"day dateDay\">{value}</div>;\n              })}\n            </div>\n          </div>\n        </div>\n      </section>\n      <MainFooter />\n    </div>\n  );\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}