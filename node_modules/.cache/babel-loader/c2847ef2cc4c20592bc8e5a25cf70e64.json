{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhkim2\\\\Desktop\\\\PerfectDay-master\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  editorToggle: false,\n  Todo: [],\n  successDate: [],\n  parcent: 0,\n  loadding: false,\n  issue: false,\n  isuueToggle: false,\n  successCon: []\n};\nconst ToggleEditor = \"ToggleEditor\";\nconst Todo = \"Todo\";\nconst success = \"success\";\nconst parcent = \"parcent\";\nconst clear = \"clear\";\nconst loadList = \"loadList\";\nconst issue = \"issue\";\nconst issueToggle = \"issueToggle\";\nconst report = \"report\";\nconst successCon = \"successCon\";\nexport const EditorAction = () => ({\n  type: ToggleEditor\n});\n_c = EditorAction;\nexport const TodoPost = data => ({\n  type: Todo,\n  data\n});\n_c2 = TodoPost;\nexport const successDate = date => ({\n  type: success,\n  date\n});\nexport const ParcentAction = data => ({\n  type: parcent,\n  data\n});\n_c3 = ParcentAction;\nexport const clearSaveList = () => ({\n  type: clear\n});\nexport const LoadSaveList = data => ({\n  type: loadList,\n  data\n});\n_c4 = LoadSaveList;\nexport const issueAction = () => ({\n  type: issue\n});\nexport const issueToggleAction = () => ({\n  type: issueToggle\n});\nexport const reportAction = () => ({\n  type: report\n});\nexport const contentAction = data => ({\n  type: successCon,\n  data\n});\nconst store = createStore(reducer, applyMiddleware(logger));\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ToggleEditor:\n      return { ...state,\n        editorToggle: !state.editorToggle\n      };\n\n    case Todo:\n      return { ...state,\n        Todo: [...state.Todo, action.data],\n        editorToggle: !state.editorToggle\n      };\n\n    case success:\n      return { ...state,\n        successDate: [...state.successDate, action.date]\n      };\n\n    case parcent:\n      return { ...state,\n        parcent: state.parcent + 25\n      };\n\n    case clear:\n      return { ...state,\n        Todo: [...state.Todo]\n      };\n\n    case loadList:\n      return { ...state,\n        loadding: state.loadding = true,\n        Todo: [...state.Todo, ...action.data]\n      };\n\n    case issue:\n      return { ...state,\n        issue: !state.issue\n      };\n\n    case issueToggle:\n      return { ...state,\n        issueToggle: !state.isuueToggle\n      };\n\n    case report:\n      return { ...state,\n        report: !state.report\n      };\n\n    case successCon:\n      return { ...state,\n        successCon: [...state.successCon, ...action.data]\n      };\n\n    default:\n      return state;\n  }\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 144,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"EditorAction\");\n$RefreshReg$(_c2, \"TodoPost\");\n$RefreshReg$(_c3, \"ParcentAction\");\n$RefreshReg$(_c4, \"LoadSaveList\");","map":{"version":3,"sources":["C:/Users/jhkim2/Desktop/PerfectDay-master/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","BrowserRouter","Provider","createStore","applyMiddleware","logger","initialState","editorToggle","Todo","successDate","parcent","loadding","issue","isuueToggle","successCon","ToggleEditor","success","clear","loadList","issueToggle","report","EditorAction","type","TodoPost","data","date","ParcentAction","clearSaveList","LoadSaveList","issueAction","issueToggleAction","reportAction","contentAction","store","reducer","state","action","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\n\nconst initialState = {\n  editorToggle: false,\n  Todo: [],\n  successDate: [],\n  parcent: 0,\n  loadding: false,\n  issue: false,\n  isuueToggle: false,\n  successCon: [],\n};\n\nconst ToggleEditor = \"ToggleEditor\";\nconst Todo = \"Todo\";\nconst success = \"success\";\nconst parcent = \"parcent\";\nconst clear = \"clear\";\nconst loadList = \"loadList\";\nconst issue = \"issue\";\nconst issueToggle = \"issueToggle\";\nconst report = \"report\";\nconst successCon = \"successCon\";\n\nexport const EditorAction = () => ({\n  type: ToggleEditor,\n});\n\nexport const TodoPost = (data) => ({\n  type: Todo,\n  data,\n});\n\nexport const successDate = (date) => ({\n  type: success,\n  date,\n});\n\nexport const ParcentAction = (data) => ({\n  type: parcent,\n  data,\n});\n\nexport const clearSaveList = () => ({\n  type: clear,\n});\n\nexport const LoadSaveList = (data) => ({\n  type: loadList,\n  data,\n});\n\nexport const issueAction = () => ({\n  type: issue,\n});\n\nexport const issueToggleAction = () => ({\n  type: issueToggle,\n});\n\nexport const reportAction = () => ({\n  type: report,\n});\n\nexport const contentAction = (data) => ({\n  type: successCon,\n  data,\n});\n\nconst store = createStore(reducer, applyMiddleware(logger));\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ToggleEditor:\n      return {\n        ...state,\n        editorToggle: !state.editorToggle,\n      };\n    case Todo:\n      return {\n        ...state,\n        Todo: [...state.Todo, action.data],\n        editorToggle: !state.editorToggle,\n      };\n    case success:\n      return {\n        ...state,\n        successDate: [...state.successDate, action.date],\n      };\n    case parcent:\n      return {\n        ...state,\n        parcent: state.parcent + 25,\n      };\n    case clear:\n      return {\n        ...state,\n        Todo: [...state.Todo],\n      };\n    case loadList:\n      return {\n        ...state,\n        loadding: (state.loadding = true),\n        Todo: [...state.Todo, ...action.data],\n      };\n    case issue:\n      return {\n        ...state,\n        issue: !state.issue,\n      };\n\n    case issueToggle:\n      return {\n        ...state,\n        issueToggle: !state.isuueToggle,\n      };\n\n    case report:\n      return {\n        ...state,\n        report: !state.report,\n      };\n\n    case successCon:\n      return {\n        ...state,\n        successCon: [...state.successCon, ...action.data],\n      };\n\n    default:\n      return state;\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}