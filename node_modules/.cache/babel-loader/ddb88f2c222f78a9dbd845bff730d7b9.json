{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhkim2\\\\Desktop\\\\PerfectDay-master\\\\src\\\\index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM, { render } from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  editorToggle: false,\n  Todo: []\n};\nconst ToggleEditor = \"ToggleEditor\";\nexport const EditorAction = () => ({\n  type: ToggleEditor\n});\n_c = EditorAction;\nexport const TodoPost = () => ({\n  type: todoPost\n});\n_c2 = TodoPost;\nconst store = createStore(reducer, applyMiddleware(logger));\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ToggleEditor:\n      return { ...state,\n        editorToggle: !state.editorToggle\n      };\n\n    case todoPost:\n      return { ...state,\n        Todo: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditorAction\");\n$RefreshReg$(_c2, \"TodoPost\");","map":{"version":3,"sources":["C:/Users/jhkim2/Desktop/PerfectDay-master/src/index.js"],"names":["React","useState","ReactDOM","render","App","reportWebVitals","BrowserRouter","Provider","createStore","applyMiddleware","logger","initialState","editorToggle","Todo","ToggleEditor","EditorAction","type","TodoPost","todoPost","store","reducer","state","action","payload","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,IAAmBC,MAAnB,QAAiC,WAAjC;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,KADK;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;AAKA,MAAMC,YAAY,GAAG,cAArB;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAO;AACjCC,EAAAA,IAAI,EAAEF;AAD2B,CAAP,CAArB;KAAMC,Y;AAIb,OAAO,MAAME,QAAQ,GAAG,OAAO;AAC7BD,EAAAA,IAAI,EAAEE;AADuB,CAAP,CAAjB;MAAMD,Q;AAIb,MAAME,KAAK,GAAGX,WAAW,CAACY,OAAD,EAAUX,eAAe,CAACC,MAAD,CAAzB,CAAzB;;AAEA,SAASU,OAAT,CAAiBC,KAAK,GAAGV,YAAzB,EAAuCW,MAAvC,EAA+C;AAC7C,UAAQA,MAAM,CAACN,IAAf;AACE,SAAKF,YAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELT,QAAAA,YAAY,EAAE,CAACS,KAAK,CAACT;AAFhB,OAAP;;AAIF,SAAKM,QAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELR,QAAAA,IAAI,EAAES,MAAM,CAACC;AAFR,OAAP;;AAIF;AACE,aAAOF,KAAP;AAZJ;AAcD;;AAEDnB,QAAQ,CAACC,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,aAAD;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEgB,KAAjB;AAAA,6BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAQEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;;AACApB,eAAe","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM, { render } from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\n\nconst initialState = {\n  editorToggle: false,\n  Todo: [],\n};\n\nconst ToggleEditor = \"ToggleEditor\";\n\nexport const EditorAction = () => ({\n  type: ToggleEditor,\n});\n\nexport const TodoPost = () => ({\n  type: todoPost,\n});\n\nconst store = createStore(reducer, applyMiddleware(logger));\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ToggleEditor:\n      return {\n        ...state,\n        editorToggle: !state.editorToggle,\n      };\n    case todoPost:\n      return {\n        ...state,\n        Todo: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}