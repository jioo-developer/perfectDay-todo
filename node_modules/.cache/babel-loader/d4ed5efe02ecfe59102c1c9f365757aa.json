{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhkim2\\\\Desktop\\\\PerfectDay-master\\\\src\\\\components\\\\calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Header from \"./header\";\nimport MainFooter from \"./mainFooter\";\nimport \"../reset.css\";\nimport \"../asset/calendar.scss\";\nimport UseInput from \"../hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Calendar() {\n  _s();\n\n  const today = {\n    year: new Date().getFullYear(),\n    //오늘 연도\n    month: new Date().getMonth() + 1,\n    //오늘 월\n    date: new Date().getDate(),\n    //오늘 날짜\n    day: new Date().getDay() //오늘 요일\n\n  };\n  const week = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n  const [selectedYear, setSelectedYear] = useState(today.year);\n  const [selectedMonth, setSelectedMonth] = useState(today.month);\n  const dateTotalCount = new Date(selectedYear, selectedMonth, 0).getDate();\n  const [propsTime, setPropTime] = useState(0);\n  const [promiseText, setPromise] = UseInput(\"\"); //선택한 년>달의 마지막 날짜\n\n  const prevMonth = useCallback(() => {\n    //이전 달 보기 보튼\n    if (selectedMonth === 1) {\n      setSelectedMonth(12);\n      setSelectedYear(selectedYear - 1);\n    } else {\n      setSelectedMonth(selectedMonth - 1);\n    }\n  }, [selectedMonth]);\n  const nextMonth = useCallback(() => {\n    //다음 달 보기 버튼\n    if (selectedMonth === 12) {\n      setSelectedMonth(1);\n      setSelectedYear(selectedYear + 1);\n    } else {\n      setSelectedMonth(selectedMonth + 1);\n    }\n  }, [selectedMonth]);\n  const returnWeek = useCallback(() => {\n    //요일 반환 함수\n    const result = week.map((value, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day\",\n        children: value\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this);\n    });\n    return result;\n  }, []);\n  const returnDay = useCallback(() => {\n    //선택된 달의 날짜들 반환 함수\n    let dayArr = [];\n\n    for (const nowDay of week) {\n      const day = new Date(selectedYear, selectedMonth - 1, 1).getDay();\n\n      if (week[day] === nowDay) {\n        for (let i = 0; i < dateTotalCount; i++) {\n          dayArr.push(i + 1);\n        }\n      } else {\n        dayArr.push(\"\");\n      }\n    }\n\n    let dayMap = dayArr.map((value, index) => {\n      return index < 35 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day dayDate\",\n        onClick: e => {\n          selectDay(e);\n        },\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this) : null;\n    });\n    return dayMap;\n  }, [selectedYear, selectedMonth, dateTotalCount]);\n\n  function selectDay(e) {\n    return new Promise(function (res) {\n      let selectDate = new Date(selectedYear, selectedMonth, parseInt(e.target.innerText));\n      let thisDay = new Date(today.year, today.month, today.date);\n      let ResultDay = selectDate - thisDay;\n      let TimeResult = Math.ceil(ResultDay / (1000 * 60 * 60 * 24));\n      res(TimeResult);\n    }).then(result => {\n      setPropTime(result);\n    });\n  }\n\n  useEffect(() => {\n    let todayOn = Array.from(document.getElementsByClassName(\"dayDate\"));\n\n    for (var i = 0; i < todayOn.length; i++) {\n      if (todayOn[i].innerText === \"\") {\n        todayOn.splice(i, 1);\n        i--;\n      }\n    }\n  }, []);\n\n  function todayCheck() {\n    let thisMonth = new Date().getMonth() + 1;\n    let todayOn = Array.from(document.getElementsByClassName(\"dayDate\"));\n\n    if (thisMonth === selectedMonth) {\n      todayOn[today.date - 1].classList.add(\"today\");\n    } else {\n      todayOn[today.date - 1].classList.remove(\"today\");\n    }\n  }\n\n  useEffect(() => {\n    todayCheck();\n  }, [selectedMonth]);\n  useEffect(() => {\n    console.log(propsTime);\n  }, [propsTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap calendar\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cal_data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title_wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date_top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date_title\",\n            children: [\" \", selectedYear, \".\", \" \", selectedMonth < 10 ? `0${selectedMonth}` : selectedMonth]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date_arrow\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prev_btn change_btn\",\n              onClick: prevMonth,\n              children: \"<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"next_btn change_btn\",\n              onClick: nextMonth,\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal_wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"days\",\n            children: returnWeek()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date_wrap\",\n            children: returnDay()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"important_data\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title_wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date_title\",\n            children: \"\\uC77C\\uC815\\uC608\\uC57D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date_txt\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD14C\\uC2A4\\uD2B8\\uC77C\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `D - ${propsTime}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input_wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"d_day_txt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button_wrap\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"d_days\",\n                children: \"\\uC791\\uC131\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Calendar, \"+QO9D3Q6BZ4wYx7e0n1SN0dTSY0=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["C:/Users/jhkim2/Desktop/PerfectDay-master/src/components/calendar.js"],"names":["React","useCallback","useEffect","useState","Header","MainFooter","UseInput","Calendar","today","year","Date","getFullYear","month","getMonth","date","getDate","day","getDay","week","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","dateTotalCount","propsTime","setPropTime","promiseText","setPromise","prevMonth","nextMonth","returnWeek","result","map","value","index","returnDay","dayArr","nowDay","i","push","dayMap","e","selectDay","Promise","res","selectDate","parseInt","target","innerText","thisDay","ResultDay","TimeResult","Math","ceil","then","todayOn","Array","from","document","getElementsByClassName","length","splice","todayCheck","thisMonth","classList","add","remove","console","log"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport Header from \"./header\";\nimport MainFooter from \"./mainFooter\";\nimport \"../reset.css\";\nimport \"../asset/calendar.scss\";\nimport UseInput from \"../hooks/useInput\";\n\nfunction Calendar() {\n  const today = {\n    year: new Date().getFullYear(), //오늘 연도\n    month: new Date().getMonth() + 1, //오늘 월\n    date: new Date().getDate(), //오늘 날짜\n    day: new Date().getDay(), //오늘 요일\n  };\n\n  const week = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n  const [selectedYear, setSelectedYear] = useState(today.year);\n  const [selectedMonth, setSelectedMonth] = useState(today.month);\n  const dateTotalCount = new Date(selectedYear, selectedMonth, 0).getDate();\n  const [propsTime, setPropTime] = useState(0);\n  const [promiseText, setPromise] = UseInput(\"\");\n\n  //선택한 년>달의 마지막 날짜\n\n  const prevMonth = useCallback(() => {\n    //이전 달 보기 보튼\n    if (selectedMonth === 1) {\n      setSelectedMonth(12);\n      setSelectedYear(selectedYear - 1);\n    } else {\n      setSelectedMonth(selectedMonth - 1);\n    }\n  }, [selectedMonth]);\n\n  const nextMonth = useCallback(() => {\n    //다음 달 보기 버튼\n    if (selectedMonth === 12) {\n      setSelectedMonth(1);\n      setSelectedYear(selectedYear + 1);\n    } else {\n      setSelectedMonth(selectedMonth + 1);\n    }\n  }, [selectedMonth]);\n\n  const returnWeek = useCallback(() => {\n    //요일 반환 함수\n    const result = week.map((value, index) => {\n      return (\n        <div key={value} className=\"day\">\n          {value}\n        </div>\n      );\n    });\n    return result;\n  }, []);\n\n  const returnDay = useCallback(() => {\n    //선택된 달의 날짜들 반환 함수\n    let dayArr = [];\n    for (const nowDay of week) {\n      const day = new Date(selectedYear, selectedMonth - 1, 1).getDay();\n      if (week[day] === nowDay) {\n        for (let i = 0; i < dateTotalCount; i++) {\n          dayArr.push(i + 1);\n        }\n      } else {\n        dayArr.push(\"\");\n      }\n    }\n\n    let dayMap = dayArr.map((value, index) => {\n      return index < 35 ? (\n        <div\n          className=\"day dayDate\"\n          onClick={(e) => {\n            selectDay(e);\n          }}\n        >\n          {value}\n        </div>\n      ) : null;\n    });\n    return dayMap;\n  }, [selectedYear, selectedMonth, dateTotalCount]);\n\n  function selectDay(e) {\n    return new Promise(function (res) {\n      let selectDate = new Date(\n        selectedYear,\n        selectedMonth,\n        parseInt(e.target.innerText)\n      );\n\n      let thisDay = new Date(today.year, today.month, today.date);\n\n      let ResultDay = selectDate - thisDay;\n\n      let TimeResult = Math.ceil(ResultDay / (1000 * 60 * 60 * 24));\n      res(TimeResult);\n    }).then((result) => {\n      setPropTime(result);\n    });\n  }\n\n  useEffect(() => {\n    let todayOn = Array.from(document.getElementsByClassName(\"dayDate\"));\n    for (var i = 0; i < todayOn.length; i++) {\n      if (todayOn[i].innerText === \"\") {\n        todayOn.splice(i, 1);\n        i--;\n      }\n    }\n  }, []);\n\n  function todayCheck() {\n    let thisMonth = new Date().getMonth() + 1;\n    let todayOn = Array.from(document.getElementsByClassName(\"dayDate\"));\n    if (thisMonth === selectedMonth) {\n      todayOn[today.date - 1].classList.add(\"today\");\n    } else {\n      todayOn[today.date - 1].classList.remove(\"today\");\n    }\n  }\n\n  useEffect(() => {\n    todayCheck();\n  }, [selectedMonth]);\n\n  useEffect(() => {\n    console.log(propsTime);\n  }, [propsTime]);\n\n  return (\n    <div className=\"wrap calendar\">\n      <Header />\n      <section className=\"cal_data\">\n        <div className=\"title_wrap\">\n          <div className=\"date_top\">\n            <div className=\"date_title\">\n              {\" \"}\n              {selectedYear}.{\" \"}\n              {selectedMonth < 10 ? `0${selectedMonth}` : selectedMonth}\n            </div>\n            <div className=\"date_arrow\">\n              <div className=\"prev_btn change_btn\" onClick={prevMonth}>\n                &lt;\n              </div>\n              <div className=\"next_btn change_btn\" onClick={nextMonth}>\n                &gt;\n              </div>\n            </div>\n          </div>\n          <div className=\"cal_wrap\">\n            <div className=\"days\">{returnWeek()}</div>\n            <div className=\"date_wrap\">{returnDay()}</div>\n          </div>\n        </div>\n        <section className=\"important_data\">\n          <div className=\"title_wrap\">\n            <div className=\"date_title\">일정예약</div>\n            <div className=\"date_txt\">\n              <p>테스트일정</p>\n              <p>{`D - ${propsTime}`}</p>\n            </div>\n            <div className=\"input_wrap\">\n              <input id=\"d_day_txt\"></input>\n              <div className=\"button_wrap\">\n                <button className=\"d_days\">작성</button>\n              </div>\n            </div>\n          </div>\n        </section>\n      </section>\n      <MainFooter />\n    </div>\n  );\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}